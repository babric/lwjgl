name: Java CI

on: [ push ]

jobs:
  build-natives:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, x86]
        exclude:
          - os: macos-latest
            arch: x86
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: 8
        distribution: zulu
        architecture: ${{ matrix.arch }}
    - if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x64'
      run: sudo apt install libx11-dev libxrandr-dev libxext-dev libxcursor-dev libxxf86vm-dev
    - if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86'
      run: sudo dpkg --add-architecture i386 && sudo apt update && sudo apt install gcc-multilib libx11-dev:i386 libxrandr-dev:i386 libxext-dev:i386 libxcursor-dev:i386 libxxf86vm-dev:i386
    - if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
      with:
          arch: ${{ matrix.arch }}
    # - if: matrix.os == 'macos-latest'
    #   run: sudo xcode-select -s /Applications/Xcode_12.4.app/Contents/Developer
    - name: Build natives
      run: ant generate-all compile_native
    - if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
    - uses: actions/upload-artifact@v3
      with:
        name: natives
        path: |
          bin/lwjgl/lwjgl*.dll
          bin/lwjgl/liblwjgl*.so
          bin/lwjgl/liblwjgl.dylib

  build:
    runs-on: ubuntu-latest
    needs: build-natives
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: zulu
      - uses: actions/download-artifact@v3
        with:
          name: natives
          path: bin/lwjgl
      - name: Build
        run: ant generate-all maven-full
      - uses: actions/upload-artifact@v3
        with:
          name: maven
          path: dist/lwjgl-maven-*.zip
